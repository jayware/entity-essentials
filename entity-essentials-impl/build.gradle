plugins {
    id 'me.champeau.gradle.jmh' version '0.4.4'
}

ext.projectObjectModel = pom {
    project {
        groupId project.group
        artifactId project.name
        version project.version
    }
    withXml {
        def root = asNode()
        root.appendNode('name', "${project.group}:${project.name}")
        root.appendNode('description', 'Default implementation of the Entity Essentials API')
        root.appendNode('url', 'http://jayware.github.io/entity-essentials/')
        root.appendNode('inceptionYear', '2015')
        def scm = root.appendNode('scm')
        scm.appendNode('url', 'https://github.com/jayware/entity-essentials')
        scm.appendNode('connection', 'git@github.com:jayware/entity-essentials.git')
        scm.appendNode('developerConnection', 'git@github.com:jayware/entity-essentials.git')
        def developers = root.appendNode('developers')
        def dev = developers.appendNode('developer')
        dev.appendNode('name', 'Elmar Schug')
        dev.appendNode('email', 'elmar.schug@jayware.org')
        dev.appendNode('organization', 'JayWare')
        dev.appendNode('organizationUrl', 'https://jayware.org')
        dev = developers.appendNode('developer')
        dev.appendNode('name', 'Markus Neubauer')
        dev.appendNode('email', 'markus.neubauer@jayware.org')
        dev.appendNode('organization', 'JayWare')
        dev.appendNode('organizationUrl', 'https://jayware.org')
        def license = root.appendNode('licenses').appendNode('license')
        license.appendNode('name', 'Apache License 2.0')
        license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0')
        license.appendNode('distribution', 'repo')
    }
}

dependencies {

    compile project(':entity-essentials-api')

    compile dependency.slf4j
    compile dependency.asm
    compile dependency.concurrent_locks

    testCompile project(':entity-essentials-assertj')

    testCompile dependency.junit
    testCompile dependency.jmockit
    testCompile dependency.assertj
    testCompile dependency.mockito
    testCompile dependency.awaitility

    testRuntime dependency.logback
    testRuntime dependency.junitRuntime // TODO: For IntelliJ until release of JUnit 5
}

jmh {
    jmhVersion = '1.17'
}

bintray {
    pkg {
        repo = 'maven'
        name = 'entity-essentials-impl'
        userOrg = 'jayware'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/jayware/entity-essentials'
        version {
            name = project.version
            desc = 'Default implementation of the Entity Essentials API'
            released  = new Date()
            vcsTag = project.version
        }
    }
    publications = ['e2Impl']
}

publishing {
    publications {
        e2Impl(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('name', "${project.group}:${project.name}")
                root.appendNode('description', 'Default implementation of the Entity Essentials API')
                root.appendNode('url', 'http://jayware.github.io/entity-essentials/')
                root.appendNode('inceptionYear', '2015')
                def scm = root.appendNode('scm')
                scm.appendNode('url', 'https://github.com/jayware/entity-essentials')
                scm.appendNode('connection', 'git@github.com:jayware/entity-essentials.git')
                scm.appendNode('developerConnection', 'git@github.com:jayware/entity-essentials.git')
                def developers = root.appendNode('developers')
                def dev = developers.appendNode('developer')
                dev.appendNode('name', 'Elmar Schug')
                dev.appendNode('email', 'elmar.schug@jayware.org')
                dev.appendNode('organization', 'JayWare')
                dev.appendNode('organizationUrl', 'https://jayware.org')
                dev = developers.appendNode('developer')
                dev.appendNode('name', 'Markus Neubauer')
                dev.appendNode('email', 'markus.neubauer@jayware.org')
                dev.appendNode('organization', 'JayWare')
                dev.appendNode('organizationUrl', 'https://jayware.org')
                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'Apache License 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0')
                license.appendNode('distribution', 'repo')
            }
        }
    }
}

artifactoryPublish {
    skip = false
    publications ('e2Impl')
}

task generatePom {
    def pomFile = "${buildDir}/tmp/jar/${project.name}-${version}.pom"
    group = 'Publishing'
    outputs.file pomFile
    doLast {
        projectObjectModel.writeTo(pomFile)
    }
}

jar {
    from (rootProject.projectDir) {
        include 'LICENSE.txt'
    }
    from (projectDir) {
        include 'README.md'
    }
    manifest {
        vendor 'jayware.org'
        name 'Entity Essentials IMPL'
        description 'Default implementation of the Entity Essentials API'
        symbolicName 'org.jayware.e2.impl'
        license 'http://www.apache.org/licenses/LICENSE-2.0'
        instruction 'Bundle-Category', 'e2,entity-essentials,impl'
        instruction 'Bundle-RequiredExecutionEnvironment', 'JavaSE-1.6'
        instruction 'Service-Component', 'OSGI-INF/*.xml'
        instruction 'Export-Package', '!org.jayware.e2.*'
    }
    into("META-INF/maven/$project.group/$project.name") {
        from generatePom
        rename ".*", "pom.xml"
    }
}

task dist(type: Copy) {
    from jar
    from sourcesJar
    from javadocJar
    from generatePom
    into file("${rootProject.buildDir}/distribution")
}

clean {
    delete '.generated'
}